{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-58ce0ed21ea65d62d35c985522e57f6987afd7751a9a74f3b070f79c543dde198df17aeeb7b861f12777b56cac67fdee00bbb307190419e0aa01c8527802c100",
            "file": "src/app/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionReducerMap } from \"@ngrx/store\";\n\nimport * as ui from './shared/ui.reducer'\nimport * as auth from './auth/auth.reducer'\n\n\n\nexport interface AppState {\n    ui: ui.State;\n    auth: auth.State\n}\n\nexport const appReducers: ActionReducerMap<AppState> = {\n    ui: ui.uiReducer,\n    auth: auth._authReducer\n}",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "auth.State",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "ui",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ui.State",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListItemsSubmenu",
            "id": "interface-ListItemsSubmenu-118d85a0af48298abfebefe5cc28a056e27e1b7e2aec4779882da28a54266880e64252057624c176d56d57879986a8123ea98d68f5d92a31465ef1a0c56209b4",
            "file": "src/app/components/list-dropdown/list-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n\ninterface ListItemsSubmenu {\n  icon?: string;\n  title: string;\n  link: string;\n}\n\n@Component({\n  selector: 'ui-list-dropdown',\n  templateUrl: './list-dropdown.component.html',\n  styleUrls: ['./list-dropdown.component.scss']\n})\nexport class ListDropdownComponent {\n\n  @Input()\n  isActived: boolean = false;\n\n  @Input()\n  title!: string;\n\n  @Input()\n  iconItem!: string;\n\n  @Input()\n  itemLink!: string;\n\n  @Input()\n  isListDropdown!: boolean;\n\n  @Input()\n  listSubmenu!: ListItemsSubmenu[];\n\n\n  expandedListDropdown: boolean = false;\n\n  expandSubmenu() {\n    if(this.isListDropdown) {\n      this.expandedListDropdown = !this.expandedListDropdown; \n    }\n  }  \n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginRequestInterface",
            "id": "interface-LoginRequestInterface-173a5b43108f7894998c562da670b0f64b2e7f49c81c8f523efe7fd7b539b397e98d82a9a0517979b2bd72523830142d9d5f1bfa2464216d48ce4c891bf9c1eb",
            "file": "src/app/shared/interface/login.request.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LoginRequestInterface {\n    response: {\n        code: number,\n        message: string;\n    }\n}",
            "properties": [
                {
                    "name": "response",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "State",
            "id": "interface-State-7da55278a0db50445ba4703410f9b8d2dfdb450aac06998e5e2f4f7f58e3d23820864668b267c306b07815419dfecff4513f6915cfd84027164ca2374ac9c450",
            "file": "src/app/auth/auth.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from \"@ngrx/store\";\nimport * as actions from './auth.actions';\nimport { UserModel } from \"src/app/models/user/user.model\";\n\n\nexport interface State {\n    user?: UserModel | null\n}\n\n\nexport const initializeState: State = {\n    user: null\n} \n\nconst authReducer = createReducer(initializeState,\n    on(actions.setUser, (state, { user }) => ({ ...state, user })),\n    on(actions.unSetUser, state => ({ ...state, user: null })),\n);\n\n\n\nexport function _authReducer(state: State | any, action: Action | any) {\n    return authReducer(state, action)\n}",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserModel | null",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "State",
            "id": "interface-State-160279b021149e7370b6821c0d7f3a5283e6e9aa416bfeaab1cf36ce376ae1b4f863916dcf259e90928243a3b45979646a062955a4e3fc9cf88f01a54d7d6926-1",
            "file": "src/app/shared/ui.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from \"@ngrx/store\";\nimport * as actions from './ui.actions'; \n\n\nexport interface State {\n    isLoading: boolean;\n}\n\nconst initializeApp: State = {\n    isLoading: false\n}\n\nconst _uiReducer = createReducer(initializeApp,\n    on(actions.isLoading,   (state => ({...state, isLoading: true}))),\n    on(actions.stopLoading, (state => ({...state, isLoading: false})))\n);\n\n\n\nexport function uiReducer(state: any, action: any) {\n    return _uiReducer(state, action);\n}\n\n",
            "properties": [
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "State-1"
        },
        {
            "name": "TaskWorkInterface",
            "id": "interface-TaskWorkInterface-85fcecc6d76bbad593f44dd2abc351f036e93af5b33370e74ecb4ffba0de2cdb7a821fdc50faafda706b5812c6311daf70e0d0db17a8c785bba58d0ae19ce1a6",
            "file": "src/app/shared/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\r\n\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { map } from 'rxjs';\r\nimport { AppState } from 'src/app/app.reducer';\r\n\r\nimport * as auth from '../../auth/auth.actions';\r\nimport { UserModel } from 'src/app/models/user/user.model';\r\n\r\n\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n\r\n\r\nexport interface UsersCollection {\r\n  uid: string,\r\n  name: string | null,\r\n  email: string | null,\r\n}\r\n\r\nexport interface TaskWorkInterface {\r\n  client: string;\r\n  hours: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  signInWhitEmailAndPassword(email: any, password: any): any {\r\n    const request = this.http.post('http://localhost:4000/v1/auth/login', {\r\n      email,\r\n      password\r\n    }, {\r\n      responseType: 'json',\r\n      withCredentials: true\r\n    })\r\n\r\n    if(!request) return null;\r\n\r\n    return request\r\n  }\r\n}",
            "properties": [
                {
                    "name": "client",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UsersCollection",
            "id": "interface-UsersCollection-85fcecc6d76bbad593f44dd2abc351f036e93af5b33370e74ecb4ffba0de2cdb7a821fdc50faafda706b5812c6311daf70e0d0db17a8c785bba58d0ae19ce1a6",
            "file": "src/app/shared/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\r\n\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { map } from 'rxjs';\r\nimport { AppState } from 'src/app/app.reducer';\r\n\r\nimport * as auth from '../../auth/auth.actions';\r\nimport { UserModel } from 'src/app/models/user/user.model';\r\n\r\n\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n\r\n\r\nexport interface UsersCollection {\r\n  uid: string,\r\n  name: string | null,\r\n  email: string | null,\r\n}\r\n\r\nexport interface TaskWorkInterface {\r\n  client: string;\r\n  hours: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  signInWhitEmailAndPassword(email: any, password: any): any {\r\n    const request = this.http.post('http://localhost:4000/v1/auth/login', {\r\n      email,\r\n      password\r\n    }, {\r\n      responseType: 'json',\r\n      withCredentials: true\r\n    })\r\n\r\n    if(!request) return null;\r\n\r\n    return request\r\n  }\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-85fcecc6d76bbad593f44dd2abc351f036e93af5b33370e74ecb4ffba0de2cdb7a821fdc50faafda706b5812c6311daf70e0d0db17a8c785bba58d0ae19ce1a6",
            "file": "src/app/shared/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "signInWhitEmailAndPassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\r\n\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { map } from 'rxjs';\r\nimport { AppState } from 'src/app/app.reducer';\r\n\r\nimport * as auth from '../../auth/auth.actions';\r\nimport { UserModel } from 'src/app/models/user/user.model';\r\n\r\n\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n\r\n\r\nexport interface UsersCollection {\r\n  uid: string,\r\n  name: string | null,\r\n  email: string | null,\r\n}\r\n\r\nexport interface TaskWorkInterface {\r\n  client: string;\r\n  hours: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  signInWhitEmailAndPassword(email: any, password: any): any {\r\n    const request = this.http.post('http://localhost:4000/v1/auth/login', {\r\n      email,\r\n      password\r\n    }, {\r\n      responseType: 'json',\r\n      withCredentials: true\r\n    })\r\n\r\n    if(!request) return null;\r\n\r\n    return request\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "UserModel",
            "id": "class-UserModel-7745d639bbddbf626551bb457793b82e07a851d456b67fa7545d971ac4648000fa3af5993c821ad96ab0bb02a79032b0ea8664d926ce115e78dd7c18490dee99",
            "file": "src/app/models/user/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UserModel {\n\n    constructor(\n        public id:      string | null,\n        public usename: string | null,\n        public email:   string | null,\n    ) {}\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "usename",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "email",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "usename",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "email",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "usename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-0debb7d94d7c15955d4d93572ecb1f4746abca59ba738fb5ea9cb1574aff86f220749f5312ca85f5718d1a932e01c44c61ab2467025f4418bb5760e959c36d8d",
            "file": "src/app/components/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'User created successfully'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"success\" | \"danger\" | \"warning\" | \"info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeAlertEmmiter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "fnCloseAlertEmmiter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ui-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent {\r\n\r\n  @Input() state: 'success' | 'danger' | 'warning' | 'info' = 'success';\r\n  @Input() label: string = 'User created successfully'\r\n  @Input() icon!: string;\r\n  @Output() closeAlertEmmiter?: EventEmitter<boolean> = new EventEmitter();\r\n  \r\n\r\n  fnCloseAlertEmmiter() {\r\n    this.closeAlertEmmiter?.emit(true);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-alert {\r\n  --alert-bg: #099276;\r\n  --alert-color-text: #f7f7f7;\r\n  --alert-color-icon: #032b26;\r\n  --alert-color-close: #f7f7f7;\r\n\r\n  max-width: 100%;\r\n  min-height: 48px;\r\n  width: max-content;\r\n  height: max-content;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  padding: 8px;\r\n  background: var(--alert-bg);\r\n  border-radius: 4px;\r\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.05),\r\n    0px 9px 9px 0px rgba(0, 0, 0, 0.04), 0px 21px 13px 0px rgba(0, 0, 0, 0.03),\r\n    0px 37px 15px 0px rgba(0, 0, 0, 0.01), 0px 58px 16px 0px rgba(0, 0, 0, 0);\r\n\r\n  &__wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n  &__icon {\r\n    font-size: 1rem;\r\n    align-self: flex-start;\r\n    color: var(--alert-color-icon);\r\n  }\r\n  &__text {\r\n    padding-right: 1em;\r\n    color: var(--alert-color-text);\r\n    font-weight: 400;\r\n  }\r\n  &__close {\r\n    color: var(--alert-color-close);\r\n    font-size: 0.7rem;\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &--danger {\r\n    --alert-bg: #f87476;\r\n    --alert-color-icon: #4b0611;\r\n  }\r\n  &--warning {\r\n    --alert-bg: #f5c26b;\r\n    --alert-color-icon: #363636;\r\n    --alert-color-text: #363636;\r\n    --alert-color-close: #363636;\r\n  }\r\n  &--info {\r\n    --alert-bg: #7b7b7b;\r\n    --alert-color-icon: #363636;\r\n  }\r\n}\r\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"ui-alert\"\r\n[class.ui-alert--danger]=\"state  === 'danger'\"\r\n[class.ui-alert--warning]=\"state === 'warning'\"\r\n[class.ui-alert--info]=\"state    === 'info'\">\r\n    <div class=\"ui-alert__wrapper\">\r\n        <span class=\"ui-alert__icon pi pi-info-circle\"></span>\r\n        <p class=\"ui-alert__text\">{{label}}<p>\r\n        </div>\r\n        <span class=\"ui-alert__close pi pi-times\" (click)=\"fnCloseAlertEmmiter\"></span>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e94e53fb37757eb53552d5bb0df471657b29200c15aa2b83bc8c7ad17a7a0012d27c2fba0d5ac31f8623e3839f391c0a7840a15a691e5f36a53af6d5a9deffe0",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private auth: AuthService) {\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-29c0551f149c23a47adfeec3413973494d45ea326adcd0dd9c784e007bc26eb6b95bc9d5a44c418638f698412a5cfbb29892db20438c49fe9db81f5db089dfa3",
            "file": "src/app/layouts/auth/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "expandMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "formTaskWork",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "expandedMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handlelogOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport * as auth from '../../../auth/auth.actions'\r\n\r\n@Component({\r\n  selector: 'ui-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  formTaskWork!: FormGroup;\r\n  userName!: string | null | undefined;\r\n  expandMenu: boolean = false;\r\n\r\n  constructor(\r\n    private auth: AuthService, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private store: Store<AppState>\r\n    ) {\r\n      this.formTaskWork = this.formBuilder.group({\r\n        client:       ['', [Validators.required, Validators.minLength(2)]],\r\n        hours:        ['', [Validators.required]],\r\n        description:  ['', [Validators.required, Validators.minLength(4)]]\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.store.select('auth').subscribe( ({user}) => {\r\n        this.userName = user?.usename\r\n      })\r\n    }\r\n\r\n    expandedMenu(): void {\r\n      this.expandMenu = !this.expandMenu;\r\n      console.log(this.expandMenu)\r\n    }\r\n  \r\n\r\n  handlelogOut() {\r\n    this.store.dispatch(auth.unSetUser());\r\n    this.router.navigate(['/'])\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-dashboard {\n    width: 100%;\n    height: 100vh;\n    overflow: hidden;\n\n    &__wrapper {\n        width: 100%;\n        height: 100vh;\n\n        @media (min-width: 900px) {\n            display: grid;\n            grid-template-columns: 250px auto;\n        }\n    }\n    &__sidebar {\n        max-width: 250px;\n        width: 80%;\n        height: inherit;\n        display: grid;\n        grid-template-rows: 200px auto auto;\n        gap: .5rem;\n        position: fixed;\n        padding: 1rem;\n        transition: cubic-bezier(.77,0,.18,1) .4s;\n        background-color: #161C25;\n        clip-path: circle(0% at 50% 50%);\n        z-index: 2;\n        opacity: 1;\n        overflow: auto;\n\n        @media (min-width: 900px) {\n            max-width: 100%;\n            width: 100%;\n            position: unset;\n            clip-path: none;\n        }\n\n        &__user {\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            gap: .8rem;\n            &-img {\n                width: 100px;\n                height: 100px;\n                border-radius: 50px;\n            }\n            &-welcome,\n            &-name {\n                color: #f1f0fd;\n            }\n\n            &-welcome {\n                font-weight: 600;\n                line-height: 22px;\n            }\n\n            &-name {\n                font-weight: 400;\n                font-size: small;\n                line-height: 22px;\n            }\n        }\n\n        &__menu {\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            gap: .8rem;\n            z-index: 2;\n        }\n\n        &__logout {\n            display: flex;\n            gap: .5rem;\n            align-self: flex-end;\n            color: #f1f0fd;\n            cursor: pointer;\n        }\n\n        &--actived {\n            clip-path: circle(100% at 50% 50%);\n            opacity: 1;\n        }\n    }\n    &__content {\n        width: 100%;\n        height: 100vh;\n        overflow: auto;\n\n        @media (min-width: 900px) {\n            padding: 1.255rem;\n        }\n    }\n\n    &__header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: relative;\n        padding: 1.255rem 1.5rem;\n        background-color: #F2EAC2;\n        z-index: 1;\n         @media (min-width: 900px) {\n            display: none;\n         }\n    }\n}\n\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"ui-dashboard\">\n\n    <div class=\"ui-dashboard__wrapper\">\n\n\n        <!-- Menu left -->\n        <div class=\"ui-dashboard__sidebar\" [class.ui-dashboard__sidebar--actived]=\"expandMenu\">\n\n            <div class=\"ui-dashboard__sidebar__user\">\n                <img src=\"https://fastly.picsum.photos/id/140/200/200.jpg?hmac=EslZ18xRW6ewC17GDNdn7zvrEZUx37IhZq5iWo9b4g8\"\n                    alt=\"profile image\" class=\"ui-dashboard__sidebar__user-img\">\n                <div class=\"ui-dashboard__sidebar__user-text\">\n                    <p class=\"ui-dashboard__sidebar__user-welcome\">Welcome</p>\n                    <p class=\"ui-dashboard__sidebar__user-name\">{{ userName }}</p>\n                </div>\n            </div>\n\n\n            <ul class=\"ui-dashboard__sidebar__menu\">\n                <ui-list-dropdown\n                    [isActived]=\"true\"\n                    [iconItem]=\"'fa-solid fa-house'\"\n                    [title]=\"'Home'\"\n                    [isListDropdown]=\"false\"\n                />\n\n                <ui-list-dropdown\n                    [iconItem]=\"'far fa-building'\"\n                    [title]=\"'Franchises'\"\n                    [isListDropdown]=\"true\"\n                    [listSubmenu]=\"[\n                        {icon: 'far fa-eye', title: 'View All', link: '/'},\n                        {icon: 'fa-solid fa-pen-to-square', title: 'Edit franchises', link: '/dashboard'},\n                        {icon: 'fa-solid fa-trash', title: 'Deleted franchises', link: '/dashboard'}\n                    ]\"\n                />\n                \n                <ui-list-dropdown\n                    [iconItem]=\"'fas fa-users'\"\n                    [title]=\"'Employees'\"\n                    [isListDropdown]=\"true\"\n                    [listSubmenu]=\"[\n                        {icon: 'far fa-eye', title: 'View All', link: 'employees'},\n                        {icon: 'fa-solid fa-pen-to-square', title: 'Edit Employees', link: '/employees/edit'},\n                        {icon: 'fa-solid fa-trash', title: 'Deleted Employees', link: 'employees/delete'}\n                    ]\"\n                />\n                <ui-list-dropdown\n                    [iconItem]=\"'fas fa-film'\"\n                    [title]=\"'Films'\"\n                    [isListDropdown]=\"true\"\n                    [listSubmenu]=\"[\n                        {icon: 'far fa-eye', title: 'View All', link: '/'},\n                        {icon: 'fa-solid fa-pen-to-square', title: 'Edit Films', link: '/dashboard'},\n                        {icon: 'fa-solid fa-trash', title: 'Deleted Films', link: '/dashboard'}\n                    ]\"\n                />\n            </ul>\n\n\n            <button type=\"button\" class=\"ui-dashboard__sidebar__logout\" (click)=\"handlelogOut()\">\n                <em class=\"fa-solid fa-right-from-bracket\"></em>\n                LOGOUT\n            </button>\n\n\n\n        </div>\n        <!-- //Menu left -->\n\n        <!-- Content-->\n        <div class=\"ui-dashboard__content\">\n            <header class=\"ui-dashboard__header\">\n                <h1>\n                    <a href=\"http://\">\n                        DASHBOARD\n                    </a>\n                </h1>\n                <div (click)=\"expandedMenu()\">\n                    <em class=\"fa-solid fa-bars\"></em>\n                </div>\n            </header>\n            <ng-content></ng-content>\n        </div>\n        <!-- //Content-->\n    </div>\n</div>"
        },
        {
            "name": "DashboardPageComponent",
            "id": "component-DashboardPageComponent-1b2a4d2a3b468e8719bd5063ba61db63b25ba03e47a5255561b64e00eaf537b06f214c08b6791800f6f7fd19b275ff5b1e571fab100f20b23bef206856d6e953",
            "file": "src/app/pages/dashboard/dashboard.page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard.page",
            "styleUrls": [
                "./dashboard.page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard.page',\n  templateUrl: './dashboard.page.component.html',\n  styleUrls: ['./dashboard.page.component.scss']\n})\nexport class DashboardPageComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-card {\n\n    width: 100%;\n    min-height: 100px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    background-color: rgb(114, 103, 239);\n    border: 1px solid #DBDBDB;\n    border-radius: 4px;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n    @media (min-width: 1366px) {\n        height: 125px;\n    }\n\n    &--secondary {\n        background-color: #3ca0e2;\n    }\n    &--terciary {\n        background-color: #a56ff7;\n    }\n\n    &__info {\n        display: flex;\n        flex-direction: column;\n        gap: .5rem;\n        color: #f1f0fd;\n\n        &-h3 {\n            font-weight: bold;\n            font-size: 1.255em;\n        }\n        &-p {\n            font-weight: 500;\n            font-size: 1em;\n        }\n    }\n\n    &__icon {\n        align-self: center;\n        font-size: 2rem;\n        color: #f1f0fd;\n        padding: 1.255rem 0rem;\n    }\n\n    &__list {\n        width: 100%;\n        height: max-content;\n        display: grid;\n        gap: 1.255rem;\n        padding: 1rem 1.5rem;\n\n        @media (min-width: 600px) {\n            gap: .4rem;\n            grid-template-columns: repeat(3, 1fr);\n        }\n        @media (min-width: 1366px) {\n            gap: 1.25rem;\n        }\n    }\n}\n\n.ui-grid {\n    width: 100%;\n    min-height: 300px;\n    display: grid;\n    gap: 1rem;\n    padding: 1rem 1.5rem;\n    &--two-columns {\n        @media (min-width: 1280px) {\n            grid-template-columns: repeat(2, 1fr);\n        }\n    }\n}\n.ui-table {\n    width: 100%;\n    height: max-content;\n    border: 1px solid #EEEEEE;\n    border-radius: 4px;\n    box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1);\n\n    &__head {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid #EEEEEE;\n        &-title {\n            padding: 1rem;\n            font-weight: 600;\n            color: #161C25;\n        }\n        &-link {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: .5rem;\n            padding-right: 1rem;            \n            font-weight: 600;\n            font-size: .875rem;\n            color: rgb(114, 103, 239);\n\n            &:hover {\n                color: #7267ef90;\n            }\n        }\n    }\n    &__body {\n        display: flex;\n        flex-direction: column;\n        gap: 1.255rem;\n        padding: 1rem;\n\n        &-item {\n            display: grid;\n            align-items: center;\n            place-items: center;\n            grid-template-columns: repeat(5, 1fr);\n            \n            &:not(:last-child) {\n                padding-bottom: 1rem;\n                border-bottom: 1px solid #eeeeee;\n            }\n        }\n    }\n}\n\n.ui-table__film {\n    &-name {\n        justify-self: flex-start;\n        color: #161C25;\n        font-weight: 600;\n        font-size: .8rem;\n    }\n    &-img {\n        width:  35px;\n        height: 35px;\n    }\n    &-price {\n        font-weight: 600;\n        font-size: .8rem;\n    }\n    &-actions {\n        display: flex;\n        gap: .8rem;\n        justify-self: flex-end;\n\n        &-edit {\n            color: #ced203;\n        }\n        &-trash {\n            color: #930000;\n        }\n    }\n}\n.ui-tag {\n    width: fit-content;\n    height: max-content;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: .4rem .8rem;\n    font-weight: bold;\n    font-size: .5em;\n    border-radius: 2px;\n\n    &--success {\n        background-color: green;\n        color: #4be94b;\n    }\n\n    &--warning {\n        background-color: #982901;\n        color: #f1622f;\n    }\n\n    &--danger {\n        background-color: #930000;\n        color: #f67373;\n    }\n}",
                    "styleUrl": "./dashboard.page.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ui-dashboard>\n\n    <div class=\"ui-headling\">\n        <h2 class=\"ui-headling__h2\">Overview</h2>\n        <p class=\"ui-headling__p\">Welcome back, Bella! Your progress is really good. Keep it\n            up</p>\n    </div>\n\n    <div class=\"ui-card__list\">\n        <div class=\"ui-card\">\n            <div class=\"ui-card__info\">\n                <h3 class=\"ui-card__info-h3\">Total Orders:</h3>\n                <p class=\"ui-card__info-p\">15,890</p>\n            </div>\n            <em class=\"fa-solid fa-podcast fa-xs ui-card__icon\"></em>\n        </div>\n        <div class=\"ui-card ui-card--secondary\">\n            <div class=\"ui-card__info\">\n                <h3 class=\"ui-card__info-h3\">Total Orders:</h3>\n                <p class=\"ui-card__info-p\">15,890</p>\n            </div>\n            <em class=\"fa-solid fa-podcast fa-xs ui-card__icon\"></em>\n        </div>\n        <div class=\"ui-card ui-card--terciary\">\n            <div class=\"ui-card__info\">\n                <h3 class=\"ui-card__info-h3\">Total Orders:</h3>\n                <p class=\"ui-card__info-p\">15,890</p>\n            </div>\n            <em class=\"fa-solid fa-podcast fa-xs ui-card__icon\"></em>\n        </div>\n    </div>\n\n    <div class=\"ui-grid ui-grid--two-columns\">\n\n        <div class=\"ui-table\">\n            <div class=\"ui-table__head\">\n                <h3 class=\"ui-table__head-title\">Films</h3>\n                <a href=\"#\" class=\"ui-table__head-link\">View more</a>\n            </div>\n            <div class=\"ui-table__body\">\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--success\">STOCK</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--danger\">NOT STOCK</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--warning\">2 ITEMS TOTAL</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"ui-table\">\n            <div class=\"ui-table__head\">\n                <h3 class=\"ui-table__head-title\">Films</h3>\n            </div>\n            <div class=\"ui-table__body\">\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--success\">STOCK</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--success\">STOCK</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n                <div class=\"ui-table__body-item\">\n                    <h4 class=\"ui-table__film-name\">Sofa</h4>\n                    <img src=\"https://dashboardkit.io/bootstrap/assets/images/widget/p4.jpg\" alt=\"Sofa\"\n                        class=\"ui-table__film-img\" />\n                    <button class=\"ui-tag ui-tag--success\">STOCK</button>\n                    <p class=\"ui-table__film-price\">86€</p>\n                    <div class=\"ui-table__film-actions\">\n                        <em class=\"fa-solid fa-pen-to-square ui-table__film-actions-edit\"></em>\n                        <em class=\"fa-solid fa-trash ui-table__film-actions-trash\"></em>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ui-dashboard>\n"
        },
        {
            "name": "EmployeesDeleteComponent",
            "id": "component-EmployeesDeleteComponent-c653a71f608d9c6c06a9a7441133d298399037ab01975b1cdd95dd6bf17795646d96cbc714c2ee59301ba1d94764f570a7706584634487462241efcf090928b7",
            "file": "src/app/pages/employees/employees.delete/employees.delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-employees.delete",
            "styleUrls": [
                "./employees.delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./employees.delete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employees.delete',\n  templateUrl: './employees.delete.component.html',\n  styleUrls: ['./employees.delete.component.scss']\n})\nexport class EmployeesDeleteComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./employees.delete.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>employees.delete works!</p>\n"
        },
        {
            "name": "EmployeesEditComponent",
            "id": "component-EmployeesEditComponent-4030bb2a9c7e6766e89ed344a518c01a625a08f3f95422b56682f488004e772db8c27b4a971feaaf27896b76b3825a51e2b1ee261254c10f88970caaeb94e021",
            "file": "src/app/pages/employees/employees.edit/employees.edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-employees.edit",
            "styleUrls": [
                "./employees.edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./employees.edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employees.edit',\n  templateUrl: './employees.edit.component.html',\n  styleUrls: ['./employees.edit.component.scss']\n})\nexport class EmployeesEditComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./employees.edit.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>employees.edit works!</p>\n"
        },
        {
            "name": "EmployeesIndexComponent",
            "id": "component-EmployeesIndexComponent-bf06b00ffa053b85c145a6d84752a41993f229ebc78371c5069459e814d571b9edcbc58243fc8ea43d091fd4714e3a3810b9abe7dedffd6e1ad06e7dc46ff231",
            "file": "src/app/pages/employees/employees.index/employees.index.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-employees.index",
            "styleUrls": [
                "./employees.index.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./employees.index.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employees.index',\n  templateUrl: './employees.index.component.html',\n  styleUrls: ['./employees.index.component.scss']\n})\nexport class EmployeesIndexComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-employees {\n    --ui-employees-columns: 2;\n    width: 100%;\n    height: max-content;\n    padding: 1.5rem;\n    &__wrapper {\n        width: 100%;\n        height: auto;\n        display: grid;\n        gap: 1.5rem;\n\n        @media (min-width: 475px) {\n            grid-template-columns: \n                repeat(\n                    var(--ui-employees-columns),\n                    1fr\n                );\n        }\n\n        @media (min-width: 640px) {\n            --ui-employees-columns: 2;\n        }\n\n        @media (min-width: 900px) {\n            --ui-employees-columns: 3;\n        }\n\n        @media (min-width: 1280px) {\n            --ui-employees-columns: 4;\n        }\n\n        \n    }\n\n\n    &__card {\n        width: 100%;\n        height: auto;\n        border: 1px solid #EEEEEE;\n        border-radius: 4px;\n        box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1);\n\n        &-image {\n            width: 100px;\n            height: 100px;\n            margin: 0 auto;\n            margin-top: -20px;\n            border-radius: 50px;\n        }\n\n        &__body {\n            padding: 1.5rem 1rem;\n        }\n\n        &__wrapper {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        &-name {\n            max-width: 15ch;\n            font-weight: 600;\n            font-size: 1rem;\n            white-space: nowrap;\n            text-overflow: ellipsis;\n            overflow: hidden;\n        }\n\n        &-actions {\n            display: flex;\n            align-items: center;\n            gap: .5rem;\n            cursor: pointer;\n\n            &-edit {\n                color: rgb(245, 84, 21);\n            }\n\n            &-trash {\n                color: rgb(169, 32, 32);\n            }\n        }\n    }\n}",
                    "styleUrl": "./employees.index.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ui-dashboard>\n    <div class=\"ui-headling\">\n        <h2 class=\"ui-headling__h2\">Employees</h2>\n        <p class=\"ui-headling__p\">Welcome back, Bella! Your progress is really good. Keep it\n            up</p>\n    </div>\n\n    <div class=\"ui-employees\">\n        <div class=\"ui-employees__wrapper\">\n            <!-- ITEM -->\n            <div class=\"ui-employees__card\">\n                <img src=\"https://images.unsplash.com/photo-1484863137850-59afcfe05386?auto=format&fit=crop&q=80&w=1742&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n                    alt=\"employee\" class=\"ui-employees__card-image\" />\n                <div class=\"ui-employees__card__body\">\n                    <div class=\"ui-employees__card__wrapper\">\n                        <h3 title=\"Virtu\" class=\"ui-employees__card-name\">Virtuanista</h3>\n                        <div class=\"ui-employees__card-actions\">\n                            <em class=\"fa-solid fa-pen-to-square ui-employees__card-actions-edit\"></em>\n                            <em class=\"fa-solid fa-trash ui-employees__card-actions-trash\"></em>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- //ITEM -->\n             <!-- ITEM -->\n             <div class=\"ui-employees__card\">\n                <img src=\"https://images.unsplash.com/photo-1484863137850-59afcfe05386?auto=format&fit=crop&q=80&w=1742&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n                    alt=\"employee\" class=\"ui-employees__card-image\" />\n                <div class=\"ui-employees__card__body\">\n                    <div class=\"ui-employees__card__wrapper\">\n                        <h3 title=\"Virtu\" class=\"ui-employees__card-name\">Virtuanista</h3>\n                        <div class=\"ui-employees__card-actions\">\n                            <em class=\"fa-solid fa-pen-to-square ui-employees__card-actions-edit\"></em>\n                            <em class=\"fa-solid fa-trash ui-employees__card-actions-trash\"></em>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- //ITEM -->\n             <!-- ITEM -->\n             <div class=\"ui-employees__card\">\n                <img src=\"https://images.unsplash.com/photo-1484863137850-59afcfe05386?auto=format&fit=crop&q=80&w=1742&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n                    alt=\"employee\" class=\"ui-employees__card-image\" />\n                <div class=\"ui-employees__card__body\">\n                    <div class=\"ui-employees__card__wrapper\">\n                        <h3 title=\"Virtu\" class=\"ui-employees__card-name\">Virtuanista</h3>\n                        <div class=\"ui-employees__card-actions\">\n                            <em class=\"fa-solid fa-pen-to-square ui-employees__card-actions-edit\"></em>\n                            <em class=\"fa-solid fa-trash ui-employees__card-actions-trash\"></em>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- //ITEM -->\n             <!-- ITEM -->\n             <div class=\"ui-employees__card\">\n                <img src=\"https://images.unsplash.com/photo-1484863137850-59afcfe05386?auto=format&fit=crop&q=80&w=1742&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n                    alt=\"employee\" class=\"ui-employees__card-image\" />\n                <div class=\"ui-employees__card__body\">\n                    <div class=\"ui-employees__card__wrapper\">\n                        <h3 title=\"Virtu\" class=\"ui-employees__card-name\">Virtuanista</h3>\n                        <div class=\"ui-employees__card-actions\">\n                            <em class=\"fa-solid fa-pen-to-square ui-employees__card-actions-edit\"></em>\n                            <em class=\"fa-solid fa-trash ui-employees__card-actions-trash\"></em>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- //ITEM -->\n             <!-- ITEM -->\n             <div class=\"ui-employees__card\">\n                <img src=\"https://images.unsplash.com/photo-1484863137850-59afcfe05386?auto=format&fit=crop&q=80&w=1742&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n                    alt=\"employee\" class=\"ui-employees__card-image\" />\n                <div class=\"ui-employees__card__body\">\n                    <div class=\"ui-employees__card__wrapper\">\n                        <h3 title=\"Virtu\" class=\"ui-employees__card-name\">Virtuanista</h3>\n                        <div class=\"ui-employees__card-actions\">\n                            <em class=\"fa-solid fa-pen-to-square ui-employees__card-actions-edit\"></em>\n                            <em class=\"fa-solid fa-trash ui-employees__card-actions-trash\"></em>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- //ITEM -->\n        </div>\n    </div>\n</ui-dashboard>"
        },
        {
            "name": "FilmsDeleteComponent",
            "id": "component-FilmsDeleteComponent-a22bb3ed16b3c6f74f97ec18ed94afd8abbfa1a5e227de6aa4b0deefd9e01283645d5cb7e80c87b2a96bcb9c1474fd08cf89426ce24164039591d4fc49bc31c4",
            "file": "src/app/pages/films/films.delete/films.delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-films.delete",
            "styleUrls": [
                "./films.delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./films.delete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-films.delete',\n  templateUrl: './films.delete.component.html',\n  styleUrls: ['./films.delete.component.scss']\n})\nexport class FilmsDeleteComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./films.delete.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>films.delete works!</p>\n"
        },
        {
            "name": "FilmsEditComponent",
            "id": "component-FilmsEditComponent-c7518da228a00af785110addaedf8467a7065c8b48f612342f59bc8abac63fe0fa06be213a5f1c821c257b05e3aa4337857198d49192961832e5731e1854928a",
            "file": "src/app/pages/films/films.edit/films.edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-films.edit",
            "styleUrls": [
                "./films.edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./films.edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-films.edit',\n  templateUrl: './films.edit.component.html',\n  styleUrls: ['./films.edit.component.scss']\n})\nexport class FilmsEditComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./films.edit.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>films.edit works!</p>\n"
        },
        {
            "name": "FilmsIndexComponent",
            "id": "component-FilmsIndexComponent-cb5d8f6405a849e25bfc8e391e3dffd6f7f83de0bdd3f09a94bd0f2078f5dc7e32a643149b88aeb66e46d7fbdc9abadf8aa77440d11b2e7d83e98b9bf767c4fa",
            "file": "src/app/pages/films/films.index/films.index.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-films.index",
            "styleUrls": [
                "./films.index.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./films.index.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-films.index',\n  templateUrl: './films.index.component.html',\n  styleUrls: ['./films.index.component.scss']\n})\nexport class FilmsIndexComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./films.index.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p>films.index works!</p>\n"
        },
        {
            "name": "ListDropdownComponent",
            "id": "component-ListDropdownComponent-118d85a0af48298abfebefe5cc28a056e27e1b7e2aec4779882da28a54266880e64252057624c176d56d57879986a8123ea98d68f5d92a31465ef1a0c56209b4",
            "file": "src/app/components/list-dropdown/list-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-list-dropdown",
            "styleUrls": [
                "./list-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "iconItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isActived",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isListDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "itemLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "listSubmenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "ListItemsSubmenu[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "expandedListDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "expandSubmenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n\ninterface ListItemsSubmenu {\n  icon?: string;\n  title: string;\n  link: string;\n}\n\n@Component({\n  selector: 'ui-list-dropdown',\n  templateUrl: './list-dropdown.component.html',\n  styleUrls: ['./list-dropdown.component.scss']\n})\nexport class ListDropdownComponent {\n\n  @Input()\n  isActived: boolean = false;\n\n  @Input()\n  title!: string;\n\n  @Input()\n  iconItem!: string;\n\n  @Input()\n  itemLink!: string;\n\n  @Input()\n  isListDropdown!: boolean;\n\n  @Input()\n  listSubmenu!: ListItemsSubmenu[];\n\n\n  expandedListDropdown: boolean = false;\n\n  expandSubmenu() {\n    if(this.isListDropdown) {\n      this.expandedListDropdown = !this.expandedListDropdown; \n    }\n  }  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-list-dropdown {\n    width: 100%;\n    height: max-content;\n    padding: .8rem;\n    border-radius: 4px;\n    cursor: pointer;\n    user-select: none;\n    \n    &:hover {\n        background-color: #232932;\n    }\n\n    &-a {\n        width: 100%;\n        display: grid;\n        grid-template-columns: auto auto;\n        font-size: 1rem;\n        color: #f1f0fd;\n\n        &__wrapper {\n            display: flex;\n            gap: .8rem;\n            align-items: center;\n        }\n\n        & em {\n            align-self: center;\n            font-size: .8rem;\n            color: #dbdbdb;\n        }\n    }\n\n    &-angle {\n        justify-self: flex-end;\n        align-self: center;\n        font-size: .8rem;\n        color: #FFFFFF;\n        transition: cubic-bezier(0.455, 0.03, 0.515, 0.955) .4s;\n        \n        &--rotate {\n            transform: rotate(180deg);\n        }\n    }\n\n    &-submenu {\n        display: flex;\n        flex-direction: column;\n        gap: .5rem;\n        animation: collapse ease-in-out .1s forwards;\n        background-color: #232932;\n        opacity: 0;\n        border-radius: 4px;\n        font-size: .88rem;\n        color: #f1f0fd;\n\n        &-item {\n            width: 100%;\n            height: max-content;\n            background-color: #161C25;\n            border-radius: inherit;\n            padding: .8rem;\n\n            &-a {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                gap: .8rem;\n                font-size: .8rem;\n            }\n        }\n\n        &--actived {\n            opacity: 1;\n            margin-top: 1.5rem;\n            animation: expand ease-in-out .4s forwards;\n        }\n    }\n\n    &--actived {\n        background-color: #232932;\n    }\n}\n\n@keyframes expand {\n    from {\n        height: 0;\n        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\n    }\n    to {\n        height: auto;\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);\n    }\n}\n@keyframes collapse {\n    from {\n        height: auto;\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);\n    }\n\n    to {\n        height: 0;\n        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\n    }\n}",
                    "styleUrl": "./list-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<li class=\"ui-list-dropdown\" (click)=\"expandSubmenu()\" [class.ui-list-dropdown--actived]=\"expandedListDropdown || isActived\">\r\n    <a [routerLink]=\"itemLink\" class=\"ui-list-dropdown-a\">\r\n        <div class=\"ui-list-dropdown-a__wrapper\">\r\n            <em class=\"{{iconItem}}\"></em>\r\n            {{title}}\r\n        </div>\r\n        <em *ngIf=\"isListDropdown\" class=\"fa-solid fa-angle-down ui-list-dropdown-angle\"\r\n            [class.ui-list-dropdown-angle--rotate]=\"expandedListDropdown\">\r\n        </em>\r\n    </a>\r\n\r\n    <ul *ngIf=\"isListDropdown\" class=\"ui-list-dropdown-submenu\"\r\n        [class.ui-list-dropdown-submenu--actived]=\"expandedListDropdown\">\r\n        <li class=\"ui-list-dropdown-submenu-item\" *ngFor=\"let item of listSubmenu\">\r\n            <a routerLink=\"/{{item.link}}\" class=\"ui-list-dropdown-submenu-item-a\">\r\n                <em *ngIf=\"item.icon\" class=\"{{item.icon}}\"></em>\r\n                {{ item.title }}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</li>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-d363c13a2eac4ce3c02fa98b65670b89223ab337fbb1155f450302a532ea758e1493af15a7c885c1c0c522325f28b1da41e3e59ca37b0930c2b5c811f37c5fd9",
            "file": "src/app/layouts/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "uiSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { LoginRequestInterface } from 'src/app/shared/interface/login.request.interface';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport * as ui from 'src/app/shared/ui.actions';\r\nimport * as authUser from 'src/app/auth/auth.actions';\r\n// import { decodeToken } from 'src/app/utils/jwt';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  loginForm!: FormGroup;\r\n  loading!: boolean;\r\n  uiSubscription!: Subscription;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private auth: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.min(6)]]\r\n    });\r\n\r\n    this.uiSubscription = this.store.select('ui').subscribe(ui => {\r\n      this.loading = ui.isLoading\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.uiSubscription.unsubscribe();\r\n  }\r\n\r\n  login(event: Event) {\r\n    event.preventDefault();\r\n    if (this.loginForm.invalid) { return; }\r\n\r\n    const { email, password } = this.loginForm.value;\r\n\r\n    this.store.dispatch(ui.isLoading());\r\n\r\n    this.auth.signInWhitEmailAndPassword(email, password)?.subscribe((e: any) => {\r\n      console.log(e)\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container w-50 min-vh-100 d-flex justify-content-center align-items-center mt-3\">\n    <div class=\"col w-100 border border-light rounded shadow p-5\">\n        <h1>LOGIN</h1>\n        <form class=\"mb-5\" [formGroup]=\"loginForm\" (ngSubmit)=\"login($event)\">\n            <div class=\"mb-3\">\n                <label for=\"\" class=\"form-label\">Email</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"email\" aria-describedby=\"helpId\"\n                    placeholder=\"\">\n                <small id=\"helpId\" class=\"form-text text-muted\">*Help text</small>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"login-password\" class=\"form-label\">Password</label>\n                <input type=\"password\" id=\"login-password\" class=\"form-control\" formControlName=\"password\"\n                    aria-describedby=\"helpId\" placeholder=\"\">\n                <small id=\"helpId\" class=\"form-text text-muted\">*Help text</small>\n            </div>\n            <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"w-100 btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"fa-solid fa-sync \n             fa-spin fa-sm text-white me-2\">\n                </span>\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Loading </span>\n            </button>\n        </form>\n        <a routerLink=\"/register\">¿No tienes cuenta? <span>registrate</span></a>\n    </div>\n</div>"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-40945d1ae161ce75a50606c3e4f959b0a270368825fd1fb8ecf7c4cda1070edbd39e86e0c2dff1b3bce078146daab7ad6f86c9d5c4cb2d03546e70e34f36488c",
            "file": "src/app/layouts/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "registerForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "uiSubscribe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUser",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport * as ui from '../../shared/ui.actions';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnDestroy {\r\n\r\n  loading!: boolean;\r\n  uiSubscribe!: Subscription;\r\n\r\n  registerForm!: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private store: Store<AppState>,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.uiSubscribe = this.store.select('ui').subscribe(ui => {\r\n      this.loading = ui.isLoading\r\n    });\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [Validators.required, Validators.min(4)]],\r\n      email:    ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.min(6)]],\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.uiSubscribe.unsubscribe();\r\n  }\r\n\r\n\r\n  setUser(event: Event) {\r\n\r\n    event.preventDefault();\r\n\r\n    if (this.registerForm.invalid) return;\r\n\r\n    this.store.dispatch(ui.isLoading());\r\n\r\n    const { username, email, password } = this.registerForm.value;\r\n\r\n    if (this.registerForm.invalid) return;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div class=\"container w-50 min-vh-100 d-flex justify-content-center align-items-center mt-3\">\n    <div class=\"col w-100 border border-light rounded shadow-lg p-5\">\n        <h1>REGISTER</h1>\n        <form class=\"mb-5\" [formGroup]=\"registerForm\" (submit)=\"setUser($event)\">\n            <div class=\"mb-3\">\n                <label for=\"\" class=\"form-label\">Username</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"username\" name=\"\" id=\"\" aria-describedby=\"helpId\"\n                    placeholder=\"\">\n                <small id=\"helpId\" class=\"form-text text-muted\">*Help text</small>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"\" class=\"form-label\">Email</label>\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"\" id=\"\" aria-describedby=\"helpId\"\n                    placeholder=\"\">\n                <small id=\"helpId\" class=\"form-text text-muted\">*Help text</small>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"\" class=\"form-label\">Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\" name=\"\" id=\"\"\n                    aria-describedby=\"helpId\" placeholder=\"\">\n                <small id=\"helpId\" class=\"form-text text-muted\">*Help text</small>\n            </div>\n            <button [disabled]=\"registerForm.invalid\" type=\"submit\" class=\"w-100 btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"fa-solid fa-sync \n             fa-spin fa-xs text-white me-2\">\n                </span>\n                <span *ngIf=\"!loading\">Create account</span>\n                <span *ngIf=\"loading\">Loading </span>\n            </button>\n        </form>\n        <a routerLink=\"/\">¿Ya tienes cuenta? <span class=\"text-underline\">Iniciar sesion</span></a>\n    </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AlertModule",
            "id": "module-AlertModule-e41b726047db4c5e0f8aa47893d1e57f5d1b6c784f8ae2bc9ebbec77702e76a55e4185734a50ef557074c0b8d9445487200d5063fbc2023e32f23e46b16d1065",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/alert/alert.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n  ]\r\n})\r\nexport class AlertModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-a574266ec8766d27bfc74c3feadf8a4a309b62e6ddc6912429d98ce38c7e98d2133f4ad75e319e406fb1d14679a103edcb72f86834294ed2db7ddc286b7bb490",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n\r\n\r\n// ngrx\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\n// Reactive Forms\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Swal\r\n\r\nimport {  AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './layouts/login/login.component';\r\nimport { RegisterComponent } from './layouts/register/register.component';\r\nimport { DashboardComponent } from './layouts/auth/dashboard/dashboard.component'; \r\nimport { appReducers } from './app.reducer';\r\nimport { ListDropdownComponent } from './components/list-dropdown/list-dropdown.component';\r\nimport { EmployeesIndexComponent } from './pages/employees/employees.index/employees.index.component';\r\nimport { EmployeesEditComponent } from './pages/employees/employees.edit/employees.edit.component';\r\nimport { EmployeesDeleteComponent } from './pages/employees/employees.delete/employees.delete.component';\r\nimport { FilmsIndexComponent } from './pages/films/films.index/films.index.component';\r\nimport { FilmsEditComponent } from './pages/films/films.edit/films.edit.component';\r\nimport { FilmsDeleteComponent } from './pages/films/films.delete/films.delete.component';\r\nimport { DashboardPageComponent } from './pages/dashboard/dashboard.page.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    ListDropdownComponent,\r\n    EmployeesIndexComponent,\r\n    EmployeesEditComponent,\r\n    EmployeesDeleteComponent,\r\n    FilmsIndexComponent,\r\n    FilmsEditComponent,\r\n    FilmsDeleteComponent,\r\n    DashboardPageComponent,\r\n    AlertComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n   \r\n    HttpClientModule,\r\n    StoreModule.forRoot(\r\n      appReducers\r\n    ),\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: false\r\n    })\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "DashboardPageComponent"
                        },
                        {
                            "name": "EmployeesDeleteComponent"
                        },
                        {
                            "name": "EmployeesEditComponent"
                        },
                        {
                            "name": "EmployeesIndexComponent"
                        },
                        {
                            "name": "FilmsDeleteComponent"
                        },
                        {
                            "name": "FilmsEditComponent"
                        },
                        {
                            "name": "FilmsIndexComponent"
                        },
                        {
                            "name": "ListDropdownComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-5cd7a38f7433ad45b8fd570f7c5ff78c6ae48b36a967aa2f0cf1eeae1bab9a58719b405bda5d022a318265956a3cf72a691217c45e7de43baa52a8ed1a2b2663",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './layouts/register/register.component';\r\nimport { LoginComponent } from './layouts/login/login.component';\r\nimport { EmployeesIndexComponent } from './pages/employees/employees.index/employees.index.component';\r\nimport { EmployeesEditComponent } from './pages/employees/employees.edit/employees.edit.component';\r\nimport { EmployeesDeleteComponent } from './pages/employees/employees.delete/employees.delete.component';\r\nimport { DashboardPageComponent } from './pages/dashboard/dashboard.page.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' },\r\n  { path: 'register', component: RegisterComponent, pathMatch: 'full' },\r\n  { \r\n    path: 'dashboard', \r\n    component: DashboardPageComponent, \r\n    pathMatch: 'full',\r\n    // canActivate: [ authGuard ]\r\n  },\r\n  {\r\n    path: 'employees',\r\n    component: EmployeesIndexComponent,\r\n    pathMatch: 'full',\r\n    // canActivate: [ authGuard ]\r\n  },\r\n  {\r\n    path: 'employees/edit',\r\n    component: EmployeesEditComponent,\r\n    pathMatch: 'full',\r\n    // canActivate: [ authGuard ]\r\n  },\r\n  {\r\n    path: 'employees/delete',\r\n    component: EmployeesDeleteComponent,\r\n    pathMatch: 'full',\r\n    // canActivate: [ authGuard ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-199563198d665f4eb7ee60a11ca25e8039f8757d7bc021a82672c8ca0c51b6cdd0cc774ee92ffa388cf6890969490dd07d4bcbd0a87bee19b24dc209ba4fd27a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/services/auth.module.ts",
            "methods": [],
            "sourceCode": "\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './auth.service'; // Asegúrate de importar tu servicio\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    AuthService // Agrega tu servicio al array de providers\n  ],\n})\nexport class AuthModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_uiReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(initializeApp,\n    on(actions.isLoading,   (state => ({...state, isLoading: true}))),\n    on(actions.stopLoading, (state => ({...state, isLoading: false})))\n)"
            },
            {
                "name": "appReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState>",
                "defaultValue": "{\n    ui: ui.uiReducer,\n    auth: auth._authReducer\n}"
            },
            {
                "name": "authReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(initializeState,\n    on(actions.setUser, (state, { user }) => ({ ...state, user })),\n    on(actions.unSetUser, state => ({ ...state, user: null })),\n)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args) => ({\r\n        props: args,\r\n        template: template,\r\n    }),\r\n    name: 'Default'\r\n}"
            },
            {
                "name": "getCookie",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/cookies.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(cookie: string): string => {\n    \n    const regex = /token=([A-Za-z0-9_.-]+)/;\n    const match = cookie.match(regex);\n    \n    if(match && match[1]) {\n        return match[1];\n    }\n\n    return '';\n}"
            },
            {
                "name": "initializeApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\n    isLoading: false\n}"
            },
            {
                "name": "initializeState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\n    user: null\n}"
            },
            {
                "name": "isLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[UI Component] isLoading'\n)"
            },
            {
                "name": "LoginAuth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/auth.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "({}) => {\n\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AlertComponent>",
                "defaultValue": "{\r\n    title: 'Components/Alert',\r\n    component: AlertComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        label: {\r\n            description: 'Label',\r\n            defaultValue: 'User created successfully',\r\n            table: {\r\n                type: { summary: 'text' },\r\n                defaultValue: { summary: 'User created successfully' },\r\n            },\r\n            control: 'text'\r\n        },\r\n        state: {\r\n            description: 'Differents state to components',\r\n            control: 'select',\r\n            options: [\r\n                'success',\r\n                'danger',\r\n                'warning',\r\n                'info',\r\n            ],\r\n            defaultValue: 'success',\r\n            table: {\r\n                defaultValue: { summary: 'success' },\r\n            },\r\n        },\r\n        icon: {\r\n            description: 'Add icon',\r\n            defaultValue: 'check_circle',\r\n            table: {\r\n                type: { summary: 'text' },\r\n                defaultValue: { summary: 'info' },\r\n            },\r\n            control: 'text'\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "setUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[Auth] setUser',\n    props<{ user: UserModel}>()\n)"
            },
            {
                "name": "stopLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[UI Component] stopLoading'\n)"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n    <ui-alert [label]=\"label\" [state]=\"state\" [icon]=\"icon\" />\r\n`"
            },
            {
                "name": "unSetUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n    '[Auth] unSetUser'\n)"
            }
        ],
        "functions": [
            {
                "name": "_authReducer",
                "file": "src/app/auth/auth.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "uiReducer",
                "file": "src/app/shared/ui.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AlertComponent>",
                "file": "src/stories/Alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/ui.reducer.ts": [
                {
                    "name": "_uiReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(initializeApp,\n    on(actions.isLoading,   (state => ({...state, isLoading: true}))),\n    on(actions.stopLoading, (state => ({...state, isLoading: false})))\n)"
                },
                {
                    "name": "initializeApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\n    isLoading: false\n}"
                }
            ],
            "src/app/app.reducer.ts": [
                {
                    "name": "appReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState>",
                    "defaultValue": "{\n    ui: ui.uiReducer,\n    auth: auth._authReducer\n}"
                }
            ],
            "src/app/auth/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(initializeState,\n    on(actions.setUser, (state, { user }) => ({ ...state, user })),\n    on(actions.unSetUser, state => ({ ...state, user: null })),\n)"
                },
                {
                    "name": "initializeState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\n    user: null\n}"
                }
            ],
            "src/stories/Alert.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args) => ({\r\n        props: args,\r\n        template: template,\r\n    }),\r\n    name: 'Default'\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AlertComponent>",
                    "defaultValue": "{\r\n    title: 'Components/Alert',\r\n    component: AlertComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        label: {\r\n            description: 'Label',\r\n            defaultValue: 'User created successfully',\r\n            table: {\r\n                type: { summary: 'text' },\r\n                defaultValue: { summary: 'User created successfully' },\r\n            },\r\n            control: 'text'\r\n        },\r\n        state: {\r\n            description: 'Differents state to components',\r\n            control: 'select',\r\n            options: [\r\n                'success',\r\n                'danger',\r\n                'warning',\r\n                'info',\r\n            ],\r\n            defaultValue: 'success',\r\n            table: {\r\n                defaultValue: { summary: 'success' },\r\n            },\r\n        },\r\n        icon: {\r\n            description: 'Add icon',\r\n            defaultValue: 'check_circle',\r\n            table: {\r\n                type: { summary: 'text' },\r\n                defaultValue: { summary: 'info' },\r\n            },\r\n            control: 'text'\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n    <ui-alert [label]=\"label\" [state]=\"state\" [icon]=\"icon\" />\r\n`"
                }
            ],
            "src/app/utils/cookies.ts": [
                {
                    "name": "getCookie",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/cookies.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(cookie: string): string => {\n    \n    const regex = /token=([A-Za-z0-9_.-]+)/;\n    const match = cookie.match(regex);\n    \n    if(match && match[1]) {\n        return match[1];\n    }\n\n    return '';\n}"
                }
            ],
            "src/app/shared/ui.actions.ts": [
                {
                    "name": "isLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[UI Component] isLoading'\n)"
                },
                {
                    "name": "stopLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[UI Component] stopLoading'\n)"
                }
            ],
            "src/app/shared/auth.ts": [
                {
                    "name": "LoginAuth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/auth.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "({}) => {\n\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/app/auth/auth.actions.ts": [
                {
                    "name": "setUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[Auth] setUser',\n    props<{ user: UserModel}>()\n)"
                },
                {
                    "name": "unSetUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n    '[Auth] unSetUser'\n)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/auth/auth.reducer.ts": [
                {
                    "name": "_authReducer",
                    "file": "src/app/auth/auth.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/ui.reducer.ts": [
                {
                    "name": "uiReducer",
                    "file": "src/app/shared/ui.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AlertComponent>",
                    "file": "src/stories/Alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "appRoutes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LoginComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "dashboard",
                        "component": "DashboardPageComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "employees",
                        "component": "EmployeesIndexComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "employees/edit",
                        "component": "EmployeesEditComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "employees/delete",
                        "component": "EmployeesDeleteComponent",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "unSetUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "_authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initializeState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-dropdown/list-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list-dropdown/list-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItemsSubmenu",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/auth/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/user/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/dashboard/dashboard.page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/employees/employees.delete/employees.delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmployeesDeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/employees/employees.edit/employees.edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmployeesEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/employees/employees.index/employees.index.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmployeesIndexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/films/films.delete/films.delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilmsDeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/films/films.edit/films.edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilmsEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/films/films.index/films.index.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilmsIndexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/auth.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interface/login.request.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginRequestInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TaskWorkInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UsersCollection",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stopLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "uiReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_uiReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initializeApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/cookies.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCookie",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}